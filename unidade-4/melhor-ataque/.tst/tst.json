{
  "files": {
    "melhor-ataque.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# Laborat\u00f3rio de Programa\u00e7\u00e3o 1 - 2017.2 UFCG\n# Aluna: J\u00falia Fernandes Alves (117211383)\n# Atividade: Melhor Ataque - Unidade 4\n\nmelhores_times = []\n\n# Inicializa a quantidade de times, no m\u00ednimo deve ter 2.\nquantidade_times = int(raw_input())\n\n# Considera o primeiro dado como o melhor time e ataque.\nmelhor_time = raw_input()\nmelhores_times.append(melhor_time)\nmelhor_ataque = int(raw_input())\n\ntotal_gols = melhor_ataque\n\nfor n in range(1, quantidade_times):\n    time = raw_input()\n    ataque = int(raw_input())\n\n    # Compara os ataques dos times, caso seja\n    # igual ao melhor_time adiciona na lista, caso\n    # seja maior limpa a lista e adiciona.\n    if melhor_ataque == ataque:\n        melhores_times.append(time)\n    elif melhor_ataque < ataque:\n        melhores_times = []\n        melhor_ataque = ataque\n        melhor_time = time\n\n        melhores_times.append(time)\n\n    total_gols += ataque\n\n# Calcula a m\u00e9dia de gols dos times.\nmedia_gols = total_gols / float(quantidade_times)\n\n# Imprime o(s) time(s) com melhor(es) ataque(s) e a m\u00e9dia de gols.\nprint \"Time(s) com melhor ataque (%i gol(s)):\" % melhor_ataque\n\nfor time in melhores_times:\n    print time\n\nprint \"\\nM\u00e9dia de gols marcados: %.1f\" % media_gols",
      "name": "melhor-ataque.py"
    },
    "qcheck.json": {
      "category": "public",
      "data": "{\n  \"quality\": [\n    {\n      \"cc\": 5,\n      \"pep8\": 0,\n      \"lloc\": 19,\n      \"vhalstead\": 66.61,\n      \"header\": 3\n    }\n  ]\n}"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "60835532c0d6e911d62ecc87cdc1f526",
  "iid": 5862878603116544,
  "activity_revision": "1.1.1"
}